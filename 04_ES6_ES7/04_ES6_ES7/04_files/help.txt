*****************************************************
========================================  1. Установка webpack
https://webpack.js.org

- открываем терминал в каталоге 04_files  и набираем команды

  npm init -y
  npm i -D webpack webpack-cli webpack-dev-server

----------------------------- 
https://semver.org/

Версионность 
~N.N.N -> обновляется только patch version
^N.N.N -> обновляются patch и  minor versions
*N.N.N -> обновляются patch, minor, major versionsd


--------------------------------------------
3 способа испоьзования webpack
1.  webpack.config.js

2. Из cli
     webpack <entry.js> <outpub.js> --colors --progress
     webpack-dev-server <entry.js>  --port=3000

3. Из лоюбого js файла
   const webpack = require('webpack')
   webpack({
            // configuration object here
   }, (err, status) => {
            // Compile callback
   });
-----------------------------------------------
Entry file -> если его не задать, то по умолчанию  webpack  ищет файл src/index.js
и будет компилировать его в dist/main.js

В терминале набираем команду
    webpack

Получим WARNING in configuration. Это потому,  что не указан mode
По умолчанию компиляция осуществляется в режиме production
https://webpack.js.org/concepts/mode/#src/components/Sidebar/Sidebar.jsx


Поэтому в терминале набираем команду

    webpack --mode=development

============= 2.Запуск webpack через файл package.json

Чтобы постоянно не набирать к cli длинные команды, их лучше вынести в свойство
"scripts"  файла package.json
////  --------------------------------------- package.json
"scripts": {
    "webpack": "webpack",
    "dev": "npm run webpack --  --mode development --watch",
    "prod": "npm run webpack -- --mode production"
}
--------------------------------------------- ////

=================  3. Конфигурационный файл webpack

https://webpack.js.org/concepts/entry-points/
https://webpack.js.org/concepts/output/


!!!!!!!!!!!!!!!!!!!!! 
1. Переименовать файл index.js в  app.js 
и перенести его в каталог src/js  

2. В файле index.html меняем название в подключаемом файле 
  <script src="js/app.js"></script>

3. создаем файл webpack.config.js
!!!!!!!!!!!!!!!!!!!!! 

--------- 
Изменим скрипты запуска

"scripts": {
    "start": "webpack --mode development --watch",
    "build": "webpack --mode production"
  }

====================== 4. Transpaler
https://babeljs.io/

npm i -D babel-loader @babel/core @babel/preset-env

========================================  Loaders
https://webpack.js.org/loaders/babel-loader/
https://babeljs.io/setup#installation
https://webpack.js.org/concepts/loaders/


======================================== 5. Loaders
----------------------------------------------  общий вид  loader
module: {
        rules: [
                { ... loader 1 ...},
                { ... loader 2 ...},
                 .....
                { ... loader n ...},
        ]
}
-----------------------------------------------------------

======================================== 6. Dev server
https://webpack.js.org/configuration/dev-server/#src/components/Sidebar/Sidebar.jsx

"scripts": {
    ...
    "dev": "webpack-dev-server  --env.mode development --progress --hide-modules --open",
    ...
  }
---------------------------

======== Browserslist
https://github.com/browserslist/browserslist




============================ 7. sass, scc, style loaders
https://webpack.js.org/loaders/sass-loader/
https://github.com/webpack-contrib/sass-loader
https://webpack.js.org/plugins/mini-css-extract-plugin/

npm i -D style-loader css-loader sass-loader sass

Переносим стили в отдельный файл 

npm i -D   mini-css-extract-plugin


============================== 8.  html webpack plugin
https://webpack.js.org/plugins/html-webpack-plugin/

npm i -D html-webpack-plugin

============================= 9. concat  js files
https://github.com/hxlniada/webpack-concat-plugin

npm i -D  webpack-concat-plugin@3.0.0

***************************************************************
************************ Buld prod   **************************
***************************************************************
===============  10. clean dist directory  

https://github.com/johnagan/clean-webpack-plugin

npm i  -D clean-webpack-plugin



===============================  11. minimizaton css
https://github.com/NMFR/optimize-css-assets-webpack-plugin

npm i -D optimize-css-assets-webpack-plugin terser-webpack-plugin



===============================  12. copy files

https://webpack.js.org/plugins/copy-webpack-plugin/#src/components/Sidebar/Sidebar.jsx
https://github.com/webpack-contrib/copy-webpack-plugin
https://webpack.js.org/plugins/copy-webpack-plugin/

npm i -D copy-webpack-plugin


* — matches everything except slashes (path separators), hidden files
**  — matches zero or more directories.
? – matches any single character except slashes (path separators).
[seq] — matches any character in sequence.

***************************************************************
************************ HOMEWORK ******************************
***************************************************************
 
Если раскомментировать в файле src/index.html строку с кодом 
      <div class="box"></div>

и в файле src/scss/general/_index.scss  строку

   // background: url(../img/im1.jpg) no-repeat;

то при запуске получим ошибку
Задача - решить проблему с компиляцией и подключением изображений
с использованием css свойства background: url(...); 